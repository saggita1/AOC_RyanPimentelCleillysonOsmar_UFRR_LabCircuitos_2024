<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.7.1" version="1.0">
  This file is intended to be loaded by Logisim (http://www.cburch.com/logisim/).

  <lib desc="#Wiring" name="0"/>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#Base" name="6">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="6" map="Button2" name="Menu Tool"/>
    <tool lib="6" map="Button3" name="Menu Tool"/>
    <tool lib="6" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="6" name="Poke Tool"/>
    <tool lib="6" name="Edit Tool"/>
    <tool lib="6" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="tristate" val="false"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(130,90)" to="(130,110)"/>
    <comp lib="0" loc="(130,110)" name="Splitter">
      <a name="facing" val="south"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
    </comp>
    <comp lib="0" loc="(130,90)" name="Pin">
      <a name="facing" val="south"/>
      <a name="width" val="4"/>
      <a name="tristate" val="false"/>
      <a name="label" val="entrada"/>
      <a name="labelloc" val="north"/>
    </comp>
  </circuit>
  <circuit name="XOR_4BITS">
    <a name="circuit" val="XOR_4BITS"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(160,250)" to="(220,250)"/>
    <wire from="(170,270)" to="(230,270)"/>
    <wire from="(170,320)" to="(220,320)"/>
    <wire from="(290,160)" to="(290,170)"/>
    <wire from="(290,260)" to="(290,270)"/>
    <wire from="(170,130)" to="(170,270)"/>
    <wire from="(290,190)" to="(290,210)"/>
    <wire from="(290,290)" to="(290,310)"/>
    <wire from="(130,90)" to="(130,110)"/>
    <wire from="(140,130)" to="(140,150)"/>
    <wire from="(360,180)" to="(360,210)"/>
    <wire from="(360,250)" to="(360,280)"/>
    <wire from="(430,230)" to="(470,230)"/>
    <wire from="(140,200)" to="(230,200)"/>
    <wire from="(260,160)" to="(290,160)"/>
    <wire from="(260,210)" to="(290,210)"/>
    <wire from="(260,260)" to="(290,260)"/>
    <wire from="(260,310)" to="(290,310)"/>
    <wire from="(330,180)" to="(360,180)"/>
    <wire from="(330,280)" to="(360,280)"/>
    <wire from="(150,130)" to="(150,170)"/>
    <wire from="(140,150)" to="(140,200)"/>
    <wire from="(150,170)" to="(150,220)"/>
    <wire from="(160,250)" to="(160,300)"/>
    <wire from="(170,270)" to="(170,320)"/>
    <wire from="(140,150)" to="(220,150)"/>
    <wire from="(150,170)" to="(230,170)"/>
    <wire from="(290,170)" to="(300,170)"/>
    <wire from="(290,190)" to="(300,190)"/>
    <wire from="(290,270)" to="(300,270)"/>
    <wire from="(290,290)" to="(300,290)"/>
    <wire from="(360,210)" to="(370,210)"/>
    <wire from="(360,250)" to="(370,250)"/>
    <wire from="(150,220)" to="(220,220)"/>
    <wire from="(160,300)" to="(230,300)"/>
    <wire from="(160,130)" to="(160,250)"/>
    <comp lib="1" loc="(330,280)" name="OR Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="1" loc="(430,230)" name="XOR Gate">
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="0" loc="(130,90)" name="Pin">
      <a name="facing" val="south"/>
      <a name="width" val="4"/>
      <a name="tristate" val="false"/>
      <a name="label" val="entrada"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="0" loc="(130,110)" name="Splitter">
      <a name="facing" val="south"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
    </comp>
    <comp lib="6" loc="(358,73)" name="Text">
      <a name="text" val="é necessário apenas um XOR com as entradas, pois a saída será 1"/>
    </comp>
    <comp lib="6" loc="(271,345)" name="Text">
      <a name="text" val="XOR de C e D"/>
    </comp>
    <comp lib="0" loc="(470,230)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="1" loc="(330,180)" name="OR Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="6" loc="(434,192)" name="Text">
      <a name="text" val="XOR DE A, B, C e D"/>
    </comp>
    <comp lib="6" loc="(327,89)" name="Text">
      <a name="text" val="se a quantidade de 1's da entrada for ímpar"/>
    </comp>
    <comp lib="1" loc="(260,210)" name="AND Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="2"/>
      <a name="negate1" val="true"/>
    </comp>
    <comp lib="6" loc="(271,135)" name="Text">
      <a name="text" val="XOR de A e B"/>
    </comp>
    <comp lib="1" loc="(260,160)" name="AND Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="2"/>
      <a name="negate0" val="true"/>
    </comp>
    <comp lib="1" loc="(260,310)" name="AND Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="2"/>
      <a name="negate1" val="true"/>
    </comp>
    <comp lib="6" loc="(312,57)" name="Text">
      <a name="text" val="Para detectar uma paridade ímpar"/>
    </comp>
    <comp lib="1" loc="(260,260)" name="AND Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="2"/>
      <a name="negate0" val="true"/>
    </comp>
  </circuit>
</project>
